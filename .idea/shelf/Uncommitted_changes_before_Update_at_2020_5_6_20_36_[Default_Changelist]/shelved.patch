Index: src/main/java/controller/FileTree.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\n\r\nimport javafx.application.Platform;\r\nimport javafx.scene.control.TreeView;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\n\r\nimport model.FileTreeItem;\r\nimport model.TreeNode;\r\nimport util.TaskThreadPools;\r\nimport util.fileUtils.FileTreeLoader;\r\nimport model.CloudImageNote;\r\nimport util.httpUtils.HttpUtil;\r\nimport util.httpUtils.exception.RequestConnectException;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.net.URISyntaxException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * @author Hi lu\r\n * @since 2020/4/15\r\n */\r\n@Getter\r\n@Setter\r\npublic class FileTree {\r\n    private TreeView<TreeNode> treeView;\r\n    private FileTreeItem rootTree;\r\n    private List<FileTreeItem> rootFileTreeItems;\r\n    /**\r\n     * 隐藏的虚拟根目录\r\n     * 程序结束时，清空cloudAlbum下的所有文件\r\n     */\r\n    private FileTreeItem cloudAlbum;//云相册\r\n    /**\r\n     * cloudImageNoteList 每次运行程序，打开云相册的临时抽象数据链表\r\n     * 每次do get cloudImageNoteList会自动增长\r\n     * ，记录id，以便删除\r\n     */\r\n    public static List<CloudImageNote> cloudImageNoteList;\r\n    private boolean isOpened;\r\n\r\n    public FileTree() throws IOException {\r\n        this.setRootFileTreeItems();\r\n        TaskThreadPools.execute(new FileTreeLoader(this));\r\n        addListener();\r\n    }\r\n\r\n    public void setRootFileTreeItems() throws IOException {\r\n        /*\r\n         * 加载系统磁盘和云相册\r\n         */\r\n        File substitute = new File(\"Substitute\");\r\n        this.setCloudAlum();\r\n        this.rootTree = new FileTreeItem(substitute, substitute.getName());\r\n        this.rootFileTreeItems = new ArrayList<>();\r\n        File[] disks = File.listRoots();\r\n        for (File disk : disks) {\r\n            /*\r\n             * 在这里可以忽略加载disks[0]（C盘）以免性能消耗过大\r\n             */\r\n            FileTreeItem item = new FileTreeItem(disk, FileTreeLoader.getDiskName(disk));\r\n            this.rootFileTreeItems.add(item);\r\n            this.rootTree.getChildren().add(item);\r\n        }\r\n        this.rootTree.getChildren().add(this.cloudAlbum);\r\n        this.treeView = new TreeView<>(rootTree);\r\n        this.treeView.setShowRoot(false);\r\n    }\r\n\r\n    public void addListener() {\r\n        /*\r\n         * 优化，点击再加载item的图片集\r\n         */\r\n        this.getTreeView().getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -> {\r\n            if(newValue == null) return;\r\n            if(newValue == this.cloudAlbum&&!isOpened) {\r\n                /*\r\n                这里应该弹窗询问是否加载\r\n                 */\r\n                isOpened = true;\r\n                /*\r\n                有修改\r\n                当点击了cloudAlbum时才把进度条加上去(加载结束后应该去掉)\r\n                 */\r\n                ViewerPane.bottom.getChildren().add(ViewerPane.progressBarWindow.getProgressBar());\r\n                TaskThreadPools.execute(()->{\r\n                    while (true) {\r\n                        ProgressBarWindow.updateProgressBar(0);\r\n                        try {\r\n                            HttpUtil.doGetPageImages(this.cloudImageNoteList,0,10);\r\n                        } catch (RequestConnectException | URISyntaxException exception) {\r\n                            /*\r\n                            连接出现错误，退出提示框\r\n                             */\r\n                            if(exception instanceof RequestConnectException)\r\n                                if (((RequestConnectException) exception).\r\n                                        getDialogSel((RequestConnectException) exception))\r\n                                    break;\r\n                        }\r\n                        this.cloudAlbum.getTreeNode().setImages();\r\n                        Platform.runLater(()-> ViewerPane.setCurrentTreeNode(this.cloudAlbum.getTreeNode()));\r\n                    }\r\n                });\r\n            }else if(newValue != this.cloudAlbum){\r\n                newValue.getValue().setImages();\r\n//                TaskThreadPools.execute(()->{\r\n//                    List<String> paths = new ArrayList<>();\r\n//                    List<File> images = newValue.getValue().getImages();\r\n//                    if(images.size() != 0){\r\n//                        for(File file : images){\r\n//                            paths.add(file.getAbsolutePath());\r\n//                        }\r\n//                        while(true){\r\n//                            try {\r\n//                                HttpUtil.doPostJson(paths);\r\n//                            } catch (URISyntaxException | RequestConnectException exception) {\r\n//                                exception.printStackTrace();\r\n//                                if(dialog.errorDialog(exception)) break;\r\n//                            }\r\n//                        }\r\n//                    }\r\n//                });\r\n                ViewerPane.setCurrentTreeNode(newValue.getValue());\r\n            }else{\r\n                ViewerPane.setCurrentTreeNode(this.cloudAlbum.getTreeNode());\r\n                System.out.println(\"云相册已经开始加载或者已经完成！\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public void setCloudAlum() throws IOException {\r\n        File cloudAlbumFile = new File(System.getProperty(\"user.dir\")+\"/cloudAlbum\");\r\n        if(!cloudAlbumFile.exists()){\r\n            if(cloudAlbumFile.mkdirs())\r\n                Runtime.getRuntime().exec(\"attrib +H \\\"\" + cloudAlbumFile.getAbsolutePath() + \"\\\"\");\r\n        }\r\n        this.cloudAlbum = new FileTreeItem(cloudAlbumFile,cloudAlbumFile.getName());\r\n        this.cloudImageNoteList = new ArrayList<>();\r\n        this.isOpened = false;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/FileTree.java	(revision aa58283db96152726521197e83c05c1e5486da44)
+++ src/main/java/controller/FileTree.java	(date 1588766564434)
@@ -90,7 +90,7 @@
                     while (true) {
                         ProgressBarWindow.updateProgressBar(0);
                         try {
-                            HttpUtil.doGetPageImages(this.cloudImageNoteList,0,10);
+                            HttpUtil.doGetPageImages(cloudImageNoteList,0,10);
                         } catch (RequestConnectException | URISyntaxException exception) {
                             /*
                             连接出现错误，退出提示框
@@ -106,23 +106,6 @@
                 });
             }else if(newValue != this.cloudAlbum){
                 newValue.getValue().setImages();
-//                TaskThreadPools.execute(()->{
-//                    List<String> paths = new ArrayList<>();
-//                    List<File> images = newValue.getValue().getImages();
-//                    if(images.size() != 0){
-//                        for(File file : images){
-//                            paths.add(file.getAbsolutePath());
-//                        }
-//                        while(true){
-//                            try {
-//                                HttpUtil.doPostJson(paths);
-//                            } catch (URISyntaxException | RequestConnectException exception) {
-//                                exception.printStackTrace();
-//                                if(dialog.errorDialog(exception)) break;
-//                            }
-//                        }
-//                    }
-//                });
                 ViewerPane.setCurrentTreeNode(newValue.getValue());
             }else{
                 ViewerPane.setCurrentTreeNode(this.cloudAlbum.getTreeNode());
@@ -138,7 +121,7 @@
                 Runtime.getRuntime().exec("attrib +H \"" + cloudAlbumFile.getAbsolutePath() + "\"");
         }
         this.cloudAlbum = new FileTreeItem(cloudAlbumFile,cloudAlbumFile.getName());
-        this.cloudImageNoteList = new ArrayList<>();
+        cloudImageNoteList = new ArrayList<>();
         this.isOpened = false;
     }
 }
\ No newline at end of file
Index: src/main/java/controller/MenuPane.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.input.KeyCombination;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Modality;\r\nimport javafx.stage.Stage;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\nimport model.PictureNode;\r\nimport util.ButtonUtil;\r\nimport util.ClipboardUtil;\r\n\r\nimport java.io.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.concurrent.atomic.AtomicBoolean;\r\n\r\n/**\r\n * @author helefeng\r\n * @date 2020/4/20 10:45 上午\r\n */\r\n@Getter\r\n@Setter\r\npublic class MenuPane extends MenuItem {\r\n\r\n    public static int status = -1;\r\n    public static File recycleBin = new File(\"recycleBin\");\r\n\r\n\r\n    private MenuItem copy = new MenuItem(\"复制\");\r\n    private MenuItem cut = new MenuItem(\"剪切\");\r\n    private MenuItem delete = new MenuItem(\"删除\");\r\n    private MenuItem reName = new MenuItem(\"重命名\");\r\n    private MenuItem seePicture = new MenuItem(\"查看\");\r\n    private MenuItem upLoad = new MenuItem(\"上传\");\r\n    private MenuItem attribute = new MenuItem(\"属性\");\r\n    private MenuItem lock = new MenuItem(\"锁定\");\r\n    private ContextMenu contextMenu = new ContextMenu();\r\n\r\n    public MenuPane() {\r\n        //把所有功能加进contextMenu\r\n        contextMenu.getItems().addAll(copy, cut, delete, reName, seePicture,upLoad,attribute);\r\n        addFunction2Button();\r\n        shortcut();\r\n        recycleBin.mkdir();\r\n    }\r\n\r\n    private void addFunction2Button(){\r\n        copyFunction();\r\n        cutFunction();\r\n        deleteFunction();\r\n        seePictureFunction();\r\n        reNameFunction();\r\n        attributeFunction();\r\n        upLoadFunction();\r\n    }\r\n\r\n\r\n    //六大功能\r\n\r\n    private void upLoadFunction(){\r\n        this.upLoad.setOnAction(event -> {\r\n            /*\r\n            * 这里插入点击upLoad之后的代码\r\n            */\r\n        });\r\n    }\r\n\r\n    private void copyFunction(){\r\n        this.copy.setOnAction(event -> {\r\n            if(PictureNode.getSelectedPictures().size()>0){\r\n                status = 1;\r\n                new ClipboardUtil();\r\n            }\r\n        });\r\n    }\r\n    private void cutFunction(){\r\n        this.cut.setOnAction(event -> {\r\n            if(PictureNode.getSelectedPictures().size()>0){\r\n                status = 2;\r\n                new ClipboardUtil();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void deleteFunction(){\r\n        this.delete.setOnAction(event -> {\r\n            MenuPane.status = 3;\r\n\r\n            //以下为一些页面布局，具体功能就是实现删除时的确认\r\n            BorderPane root = new BorderPane();\r\n            root.setStyle(\"-fx-background-color: White;\");\r\n            Label label = new Label(\"是否删除\");\r\n            label.setFont(new Font(30));\r\n            HBox hBox = new HBox(25);\r\n            Button yes = ButtonUtil.createButton(\"submit\");\r\n            Button no = ButtonUtil.createButton(\"cancel\");\r\n            yes.setPrefWidth(50);\r\n            no.setPrefWidth(50);\r\n            hBox.getChildren().add(yes);\r\n            hBox.getChildren().add(no);\r\n            hBox.setAlignment(Pos.BOTTOM_CENTER);\r\n            hBox.setPadding(new Insets(5,5,10,5));\r\n            root.setCenter(label);\r\n            root.setBottom(hBox);\r\n            Scene scene = new Scene(root,450,150);\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.initModality(Modality.APPLICATION_MODAL);\r\n            stage.getIcons().add(new Image(\"file:\"+new File(\"icon/stageIcon.png\"),30, 30,\r\n                    true, true));\r\n            stage.setTitle(\"删除确认\");\r\n            stage.show();\r\n            yes.setOnMouseClicked(event1 -> {\r\n                stage.close();\r\n                int num = 0;\r\n                NoSelectedMenuPane.everyRevocationNum.add(PictureNode.getSelectedPictures().size());\r\n                for(PictureNode each:PictureNode.getSelectedPictures()){\r\n\r\n                    String srcPath = each.getFile().getAbsolutePath();\r\n                    String destPath =\r\n                            recycleBin.getAbsolutePath()+\"/\"\r\n                                    +each.getFile().getName();\r\n                    NoSelectedMenuPane.revocationPictureFiles.add(each.getFile());\r\n                    try {\r\n                        copyFile(srcPath,destPath);\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    if(each.getFile().delete()){\r\n                        System.out.printf(\"第%d张图片删除成功\",++num);\r\n                        ViewerPane.flowPane.getChildren().remove(each);\r\n                    }\r\n                }\r\n            });\r\n            no.setOnMouseClicked(event1 -> {\r\n                stage.close();\r\n            });\r\n        });\r\n    }\r\n    private void seePictureFunction(){\r\n        this.seePicture.setOnAction(event -> {\r\n            new SeePicture(ViewerPane.currentTreeNode.getValue().getImages().get(0),ViewerPane.currentTreeNode.getValue().getImages().get(0).getName());\r\n        });\r\n    }\r\n\r\n    private void attributeFunction(){\r\n\r\n    }\r\n\r\n    private void lockFunction(){\r\n\r\n    }\r\n\r\n    private void reNameFunction() {\r\n        this.reName.setOnAction(event -> {\r\n            boolean single;\r\n            GridPane grid = new GridPane();\r\n            Button submit = ButtonUtil.createButton(\"submit\");\r\n            Label msg = new Label();\r\n            Label label1 = new Label(\"名称\");\r\n            Stage anotherStage = new Stage();\r\n            TextField name = new TextField();\r\n            TextField startNum = new TextField();\r\n            TextField bitNum = new TextField();\r\n\r\n            //单选多选\r\n            single = PictureNode.getSelectedPictures().size() == 1;\r\n\r\n            grid.setPadding(new Insets(10, 10, 10, 10));\r\n            grid.setVgap(5);\r\n            grid.setHgap(5);\r\n            GridPane.setConstraints(label1, 0, 0);\r\n            name.setPromptText(\"请输入新名字\");\r\n            name.setPrefColumnCount(20);\r\n            name.getText();\r\n            GridPane.setConstraints(name, 1, 0);\r\n            grid.getChildren().addAll(label1, name);\r\n            grid.setStyle(\"-fx-background-color:White;\");\r\n            if (single) {\r\n                GridPane.setConstraints(msg, 1, 1);\r\n                GridPane.setConstraints(submit, 2, 1);\r\n                grid.getChildren().addAll(submit, msg);\r\n            } else {\r\n                Label label2 = new Label(\"起始编号\");\r\n                GridPane.setConstraints(label2, 0, 1);\r\n                startNum.setPromptText(\"请输入起始编号\");\r\n                startNum.setPrefColumnCount(15);\r\n                startNum.getText();\r\n                GridPane.setConstraints(startNum, 1, 1);\r\n                Label label3 = new Label(\"编号位数\");\r\n                GridPane.setConstraints(label3, 0, 2);\r\n                bitNum.setPromptText(\"请输入编号位数\");\r\n                bitNum.setPrefColumnCount(10);\r\n                bitNum.getText();\r\n                GridPane.setConstraints(bitNum, 1, 2);\r\n                GridPane.setConstraints(msg, 1, 3);\r\n                GridPane.setConstraints(submit, 2, 4);\r\n                grid.getChildren().addAll(label2, startNum, submit, msg,label3,bitNum);\r\n            }\r\n\r\n            submit.setOnAction(new EventHandler<ActionEvent>() {\r\n                @Override\r\n                public void handle(ActionEvent e) {\r\n                    if (single) {\r\n                        if ((name.getText() != null && !name.getText().isEmpty())) {\r\n                            if (renameSingle(name.getText())) {\r\n                                anotherStage.close();\r\n                            } else {\r\n                                msg.setText(\"已有该名字的图片存在，请重新输入\");\r\n                            }\r\n                        } else {\r\n                            msg.setText(\"请输入!\");\r\n                        }\r\n                    } else {\r\n                        if ((name.getText() != null && !name.getText().isEmpty())\r\n                                && (startNum.getText() != null && !startNum.getText().isEmpty())\r\n                                &&(bitNum.getText() != null && !bitNum.getText().isEmpty())){\r\n                            if (renameMore(name.getText(),startNum.getText(),bitNum.getText())) {\r\n                                anotherStage.close();\r\n                            } else {\r\n                                msg.setText(\"错误！请重新输入\");\r\n                            }\r\n                        } else {\r\n                            msg.setText(\"你没有输入，请输入!\");\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            Scene scene = new Scene(grid);\r\n            anotherStage.setTitle(\"重命名\");\r\n            anotherStage.getIcons().add(new Image(\"file:\"+new File(\"icon/stageIcon.png\"),30, 30,\r\n                    true, true));\r\n            anotherStage.setScene(scene);\r\n            anotherStage.initModality(Modality.APPLICATION_MODAL);\r\n            anotherStage.show();\r\n\r\n        });\r\n    }\r\n\r\n    //创建名字\r\n    private String createName(String newFileName,int id,int bit) {\r\n        StringBuilder newName = new StringBuilder(newFileName);\r\n        int tt = id;\r\n        int cnt=0;\r\n        while(tt!=0) {\r\n            cnt++;\r\n            tt/=10;\r\n        }\r\n        if(id==0)  cnt++;\r\n        while(bit>cnt) {\r\n            newName.append(0);\r\n            cnt++;\r\n        }\r\n        newName.append(id);\r\n        return newName.toString();\r\n    }\r\n    //重命名单个文件\r\n    private boolean renameSingle(String newFileName) {\r\n        PictureNode oldNode = PictureNode.getSelectedPictures().get(0);\r\n        File file = oldNode.getFile();\r\n        String FileName = file.getParent()+\"\\\\\" + newFileName + file.getName().substring(file.getName().lastIndexOf(\".\"));\r\n        File newFile = new File(FileName);\r\n        if(!file.renameTo(newFile)) {\r\n            newFile.delete();\r\n            return false;\r\n        }\r\n        PictureNode newNode = new PictureNode(newFile);\r\n        PictureNode.getSelectedPictures().remove(0);\r\n        ViewerPane.flowPane.getChildren().remove(oldNode);\r\n        ViewerPane.flowPane.getChildren().add(newNode);\r\n        return true;\r\n    }\r\n    //重命名多个文件\r\n    private boolean renameMore(String newFileName,String startNum,String bitNum) {\r\n        File file;\r\n        int id = Integer.parseInt(startNum);\r\n//        int bit = String.valueOf(PictureNode.getSelectedPictures().size()).length();\r\n        int bit = Integer.valueOf(bitNum);\r\n        ArrayList<PictureNode> oldList = new ArrayList<>();\r\n        ArrayList<PictureNode> newList = new ArrayList<>();\r\n\r\n        for (PictureNode picture : PictureNode.getSelectedPictures()) {\r\n            file = picture.getFile();\r\n            String newname = createName(newFileName, id++, bit);\r\n            String FileName = file.getParent()+ \"\\\\\" + newname +file.getName().substring(file.getName().lastIndexOf(\".\"));\r\n            File newFile = new File(FileName);\r\n            if(!file.renameTo(newFile)) {\r\n                newFile.delete();\r\n                return false;\r\n            }\r\n            oldList.add(picture);\r\n            PictureNode newImage = new PictureNode(newFile);\r\n            newList.add(newImage);\r\n        }\r\n        for(int i=0; i<oldList.size(); i++) {\r\n            PictureNode.getSelectedPictures().remove(0);\r\n            ViewerPane.flowPane.getChildren().remove(oldList.get(i));\r\n            ViewerPane.flowPane.getChildren().add(newList.get(i));\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    //复制文件的函数\r\n    public void copyFile(String srcPath, String destPath) throws IOException {\r\n        // 打开输入流\r\n        FileInputStream fis = new FileInputStream(srcPath);\r\n        // 打开输出流\r\n        FileOutputStream fos = new FileOutputStream(destPath);\r\n\r\n        // 读取和写入信息\r\n        int len = 0;\r\n        while ((len = fis.read()) != -1) {\r\n            fos.write(len);\r\n        }\r\n\r\n        // 关闭流  先开后关  后开先关\r\n        fos.close(); // 后开先关\r\n        fis.close(); // 先开后关\r\n\r\n    }\r\n\r\n    private void shortcut(){\r\n        copy.setAccelerator(KeyCombination.valueOf(\"shift+c\"));\r\n        cut.setAccelerator(KeyCombination.valueOf(\"shift+t\"));\r\n        delete.setAccelerator(KeyCombination.valueOf(\"shift+d\"));\r\n        reName.setAccelerator(KeyCombination.valueOf(\"shift+r\"));\r\n        seePicture.setAccelerator(KeyCombination.valueOf(\"shift+o\"));\r\n        upLoad.setAccelerator(KeyCombination.valueOf(\"shift+u\"));\r\n//        allSelectedMenuItem.setAccelerator(KeyCombination.valueOf(\"shift+a\"));\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/MenuPane.java	(revision aa58283db96152726521197e83c05c1e5486da44)
+++ src/main/java/controller/MenuPane.java	(date 1588768597512)
@@ -19,8 +19,12 @@
 import model.PictureNode;
 import util.ButtonUtil;
 import util.ClipboardUtil;
+import util.TaskThreadPools;
+import util.httpUtils.HttpUtil;
+import util.httpUtils.exception.RequestConnectException;
 
 import java.io.*;
+import java.net.URISyntaxException;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.concurrent.atomic.AtomicBoolean;
@@ -73,6 +77,7 @@
             /*
             * 这里插入点击upLoad之后的代码
             */
+
         });
     }
 
